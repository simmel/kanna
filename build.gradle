plugins {
  id 'application'
  id 'java'
  id 'com.github.johnrengelman.shadow' version '5.2.0'
  id 'signing'
  id 'maven-publish'
}

group = "se.soy.${project.name.toLowerCase()}"
mainClassName = "${group}.Main"
version = '1.0.0'

ext {
  url = "https://github.com/simmel/${project.name}"
  gitRepo = "git@github.com:simmel/${project.name}.git"
  versions = [
    camel       : '3.3.0',
    slf4j       : '1.7.30',
    logback     : '1.2.3',
  ]
  isReleaseVersion = !version.endsWith("SNAPSHOT")
}

repositories {
  mavenLocal()
  mavenCentral()
}

dependencies {
  implementation "org.slf4j:slf4j-api:$versions.slf4j"

  compileOnly "org.apache.camel.karaf:camel-blueprint-main:$versions.camel"

  runtimeOnly "org.slf4j:jul-to-slf4j:$versions.slf4j"
  runtimeOnly "org.slf4j:jcl-over-slf4j:$versions.slf4j"
  runtimeOnly "org.slf4j:log4j-over-slf4j:$versions.slf4j"

  runtimeOnly "ch.qos.logback:logback-classic:$versions.logback"
}

java {
  withJavadocJar()
  withSourcesJar()
}

shadowJar {
  classifier = ''
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      artifact(shadowJar)
      artifact(sourcesJar)
      artifact(javadocJar)

      pom {
        name = project.name
        description = 'a minimal Karaf to run Blueprints with Camel integrations'
        url = project.url
        packaging = 'jar'

        licenses {
          license {
            name = 'ISC license'
            url = 'https://www.isc.org/downloads/software-support-policy/isc-license/'
            distribution = 'repo'
          }
        }

        developers {
          developer {
            id = 'simmel'
            name = 'Simon Lundstr√∂m'
            email = 'simmel@soy.se'
          }
        }

        scm {
          url = project.url
          connection = "scm:git:${project.url}.git"
          developerConnection = "scm:git:${project.gitRepo}"
        }
      }
    }
  }

  repositories {
    maven {
      def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
      def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
      url = isReleaseVersion ? releasesRepoUrl : snapshotsRepoUrl

      credentials {
        username ossrhUsername
        password ossrhPassword
      }
    }
  }
}

signing {
  useGpgCmd()
  required { isReleaseVersion && gradle.taskGraph.hasTask("publish") }
  sign publishing.publications.mavenJava
}

tasks.withType(Sign) {
  onlyIf { isReleaseVersion }
}

javadoc {
  if(JavaVersion.current().isJava9Compatible()) {
    options.addBooleanOption('html5', true)
  }
}
